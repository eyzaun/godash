# GoDash System Monitor Configuration
# Copy this file to .env and customize for your environment

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
SERVER_HOST=0.0.0.0
SERVER_PORT=8080
SERVER_MODE=debug
SERVER_READ_TIMEOUT=30s
SERVER_WRITE_TIMEOUT=30s

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DB_HOST=localhost
DB_PORT=5433
DB_USER=godash
DB_PASSWORD=password
DB_NAME=godash
DB_SSL_MODE=disable
DB_TIMEZONE=UTC
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=5m
DB_LOG_LEVEL=warn

# =============================================================================
# METRICS COLLECTION CONFIGURATION
# =============================================================================
METRICS_COLLECTION_INTERVAL=30s
METRICS_RETENTION_DAYS=30
METRICS_ENABLE_CPU=true
METRICS_ENABLE_MEMORY=true
METRICS_ENABLE_DISK=true
METRICS_ENABLE_NETWORK=true
METRICS_ENABLE_PROCESSES=true
METRICS_BUFFER_SIZE=100

# =============================================================================
# ALERT SYSTEM CONFIGURATION
# =============================================================================
ALERTS_ENABLE=true
ALERTS_CHECK_INTERVAL=30s
ALERTS_COOLDOWN_PERIOD=5m

# =============================================================================
# EMAIL NOTIFICATION CONFIGURATION
# =============================================================================
# Set EMAIL_ENABLED=true to enable email alerts
EMAIL_ENABLED=false
EMAIL_SMTP_HOST=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_SMTP_USERNAME=your-email@gmail.com
EMAIL_SMTP_PASSWORD=your-app-password
EMAIL_FROM_EMAIL=godash@yourcompany.com
EMAIL_FROM_NAME=GoDash Monitor
EMAIL_USE_TLS=true

# =============================================================================
# WEBHOOK NOTIFICATION CONFIGURATION
# =============================================================================
WEBHOOK_TIMEOUT=10s
WEBHOOK_MAX_RETRIES=3
WEBHOOK_RETRY_DELAY=2s

# =============================================================================
# EXAMPLE EMAIL CONFIGURATIONS
# =============================================================================

# Gmail Configuration:
# EMAIL_SMTP_HOST=smtp.gmail.com
# EMAIL_SMTP_PORT=587
# EMAIL_SMTP_USERNAME=your-email@gmail.com
# EMAIL_SMTP_PASSWORD=your-app-password  # Use App Password, not regular password
# EMAIL_USE_TLS=true

# Outlook/Hotmail Configuration:
# EMAIL_SMTP_HOST=smtp-mail.outlook.com
# EMAIL_SMTP_PORT=587
# EMAIL_SMTP_USERNAME=your-email@outlook.com
# EMAIL_SMTP_PASSWORD=your-password
# EMAIL_USE_TLS=true

# AWS SES Configuration:
# EMAIL_SMTP_HOST=email-smtp.us-east-1.amazonaws.com
# EMAIL_SMTP_PORT=587
# EMAIL_SMTP_USERNAME=your-ses-username
# EMAIL_SMTP_PASSWORD=your-ses-password
# EMAIL_USE_TLS=true

# Custom SMTP Configuration:
# EMAIL_SMTP_HOST=mail.yourcompany.com
# EMAIL_SMTP_PORT=587
# EMAIL_SMTP_USERNAME=alerts@yourcompany.com
# EMAIL_SMTP_PASSWORD=your-password
# EMAIL_USE_TLS=true

# =============================================================================
# EXAMPLE WEBHOOK URLS
# =============================================================================

# Slack Webhook Example:
# Create alert with webhook_url: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

# Discord Webhook Example:
# Create alert with webhook_url: https://discord.com/api/webhooks/000000000000000000/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Microsoft Teams Webhook Example:
# Create alert with webhook_url: https://outlook.office.com/webhook/...

# Generic Webhook Example:
# Create alert with webhook_url: https://your-api.com/webhooks/alerts

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================

# For production deployment:
# 1. Set SERVER_MODE=release
# 2. Use strong DB_PASSWORD
# 3. Enable EMAIL_ENABLED=true with proper SMTP settings
# 4. Set appropriate METRICS_RETENTION_DAYS (7-90 days recommended)
# 5. Configure alerts via API or admin interface
# 6. Set up proper SSL/TLS termination (nginx, cloudflare, etc.)
# 7. Use environment-specific values for each deployment

# =============================================================================
# DOCKER ENVIRONMENT OVERRIDES
# =============================================================================

# When using docker-compose, these values will override container defaults:
# - DB_HOST=postgres (container name)
# - DB_PORT=5432 (internal port)
# - SERVER_HOST=0.0.0.0 (bind to all interfaces)

# =============================================================================
# SECURITY RECOMMENDATIONS
# =============================================================================

# 1. Use environment variables or secrets management for sensitive data
# 2. Never commit real passwords to version control
# 3. Use app passwords for Gmail (not your regular password)
# 4. Implement proper firewall rules for database access
# 5. Consider using SSL/TLS for database connections in production
# 6. Regularly rotate passwords and API keys
# 7. Monitor access logs and alert on suspicious activity

# =============================================================================
# MONITORING AND MAINTENANCE
# =============================================================================

# Recommended alert configurations:
# - CPU > 80% for 5 minutes (Warning)
# - CPU > 95% for 2 minutes (Critical)
# - Memory > 85% for 5 minutes (Warning) 
# - Memory > 95% for 2 minutes (Critical)
# - Disk > 90% for 10 minutes (Warning)
# - Disk > 95% for 5 minutes (Critical)
# - Load Average > 2.0 for 10 minutes (Warning)

# Maintenance tasks:
# - Review and cleanup old metrics data periodically
# - Monitor alert frequency and adjust thresholds as needed
# - Test email and webhook notifications monthly
# - Review and update alert recipient lists quarterly
# - Monitor database size and performance
# - Update GoDash to latest version for security patches